name: "From Develop to Main branch CI"
on:
  push:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type (patch, minor, major)"
        required: false
        default: "patch"

permissions:
  contents: write
  id-token: write

env:
  GO_VERSION: 1.23
  APP_NAME: "472-fe-cicd"

jobs:
  build:
    name: "Build and Push Docker Image"
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versioning.outputs.NEW_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-dept: 0

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: "Generate Next Version Tag"
        id: versioning
        run: |
          VERSION_TYPE="${{ github.event.inputs.version_type || 'patch' }}"
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="v0.1.0"
          else
            MAJOR=$(echo "$LATEST_TAG" | cut -d. -f1 | tr -d 'v')
            MINOR=$(echo "$LATEST_TAG" | cut -d. -f2)
            PATCH=$(echo "$LATEST_TAG" | cut -d. -f3)

            if [[ "$VERSION_TYPE" == "major" ]]; then
              NEW_TAG="v$((MAJOR + 1)).0.0"
            elif [[ "$VERSION_TYPE" == "minor" ]]; then
              NEW_TAG="v$MAJOR.$((MINOR + 1)).0"
            else
              NEW_TAG="v$MAJOR.$MINOR.$((PATCH + 1))"
            fi
          fi

          echo "NEW_TAG=$NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

      - name: "Build and Push Docker Image"
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:${NEW_TAG}"
          docker build -f docker/prod.Dockerfile -t "${IMAGE_NAME}" .
          docker push "${IMAGE_NAME}"

  release:
    name: "Create GitHub Release"
    needs: build
    runs-on: ubuntu-latest
    env:
      NEW_TAG: ${{ needs.build.outputs.tag }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Create and Push Git Tag"
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}

      - name: "Create GitHub Release"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: Release ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
